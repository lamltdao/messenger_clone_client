[{"/Users/lamdaoletung/src/messenger_clone/messenger_clone_client/src/index.js":"1","/Users/lamdaoletung/src/messenger_clone/messenger_clone_client/src/routes/LoginSecuredRoute.js":"2","/Users/lamdaoletung/src/messenger_clone/messenger_clone_client/src/contexts/AuthProvider.js":"3","/Users/lamdaoletung/src/messenger_clone/messenger_clone_client/src/contexts/ThemeProvider.js":"4","/Users/lamdaoletung/src/messenger_clone/messenger_clone_client/src/contexts/VideoCallProvider.js":"5","/Users/lamdaoletung/src/messenger_clone/messenger_clone_client/src/components/video_call/VideoCall.js":"6","/Users/lamdaoletung/src/messenger_clone/messenger_clone_client/src/components/nav_bar/LogOut.js":"7","/Users/lamdaoletung/src/messenger_clone/messenger_clone_client/src/components/dashboard/sidebar/Searchfield.js":"8","/Users/lamdaoletung/src/messenger_clone/messenger_clone_client/src/components/Register.js":"9","/Users/lamdaoletung/src/messenger_clone/messenger_clone_client/src/routes/HomeSecuredRoute.js":"10","/Users/lamdaoletung/src/messenger_clone/messenger_clone_client/src/contexts/SocketProvider.js":"11","/Users/lamdaoletung/src/messenger_clone/messenger_clone_client/src/components/dashboard/ConversationDetail.js":"12","/Users/lamdaoletung/src/messenger_clone/messenger_clone_client/src/components/dashboard/sidebar/ConversationList.js":"13","/Users/lamdaoletung/src/messenger_clone/messenger_clone_client/src/contexts/ConversationProvider.js":"14"},{"size":423,"mtime":1627356949044,"results":"15","hashOfConfig":"16"},{"size":589,"mtime":1627356949044,"results":"17","hashOfConfig":"16"},{"size":2766,"mtime":1627356949041,"results":"18","hashOfConfig":"16"},{"size":1298,"mtime":1627356949043,"results":"19","hashOfConfig":"16"},{"size":4054,"mtime":1627356949043,"results":"20","hashOfConfig":"16"},{"size":2917,"mtime":1627356949041,"results":"21","hashOfConfig":"16"},{"size":935,"mtime":1627356949039,"results":"22","hashOfConfig":"16"},{"size":349,"mtime":1627356949039,"results":"23","hashOfConfig":"16"},{"size":2240,"mtime":1627356949036,"results":"24","hashOfConfig":"16"},{"size":619,"mtime":1627356949044,"results":"25","hashOfConfig":"16"},{"size":1964,"mtime":1627374836623,"results":"26","hashOfConfig":"16"},{"size":4949,"mtime":1627356949037,"results":"27","hashOfConfig":"16"},{"size":1517,"mtime":1627356949038,"results":"28","hashOfConfig":"16"},{"size":3979,"mtime":1627376011831,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ilr6m7",{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"43"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"59"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/lamdaoletung/src/messenger_clone/messenger_clone_client/src/index.js",[],"/Users/lamdaoletung/src/messenger_clone/messenger_clone_client/src/routes/LoginSecuredRoute.js",["67"],"import React from 'react'\nimport {Route, Redirect} from 'react-router-dom'\nimport useLocalStorage from '../hooks/useLocalStorage';\n\nexport default function LoginSecuredRoute({ children, ...rest }) {\n  let [refreshToken, setRefreshToken] = useLocalStorage('refresh_token', null) \n  return (\n      <Route\n        {...rest}\n        render={({ location }) =>\n          refreshToken !== null ? (\n            <Redirect\n              to={{\n                pathname: \"/\",\n                state: { from: location }\n              }}\n            />\n          ) : children\n        }\n      />\n    );\n}\n",["68","69"],"/Users/lamdaoletung/src/messenger_clone/messenger_clone_client/src/contexts/AuthProvider.js",[],["70","71"],"/Users/lamdaoletung/src/messenger_clone/messenger_clone_client/src/contexts/ThemeProvider.js",["72","73"],"/Users/lamdaoletung/src/messenger_clone/messenger_clone_client/src/contexts/VideoCallProvider.js",[],["74","75"],"/Users/lamdaoletung/src/messenger_clone/messenger_clone_client/src/components/video_call/VideoCall.js",["76","77"],"import React, { useEffect, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\nimport { useVideoCallContext } from \"../../contexts/VideoCallProvider\";\nimport { useSocket } from \"../../contexts/SocketProvider\";\nimport { useUserContext } from \"../../contexts/UserProvider\";\nimport Video from \"./Video\";\n\n\nconst ControlButton = ({iconName, text, classAtr, ...otherAtr}) => {\n  return (\n    <Button\n      {...otherAtr}\n      className={`d-flex flex-column justify-content-center align-items-center px-4 py-1 mx-2 bg-dark border-0 ${classAtr}`}\n    >\n    <FontAwesomeIcon icon={iconName} />\n    <span>{text}</span>\n  </Button>\n)\n}\nexport default function VideoCall() {\n  const { streams, joinCall } = useVideoCallContext();\n  const [myStream, ...otherStreams] = streams\n  const { user } = useUserContext();\n  const { isVideoCallSocketConnected, setIsInitVideoCallSocket } = useSocket();\n  const [isMute, setIsMute] = useState(true)\n  const [isVideoStop, setIsVideoStop] = useState(false)\n  function muteAndUnmute(e) {\n    e.preventDefault()\n    setIsMute((isMute) => {\n      return !isMute\n    })\n  }\n\n  function playAndStopVideo(e) {\n    e.preventDefault()\n    setIsVideoStop((isVideoStop) => {\n      return !isVideoStop\n    })\n  }\n\n  function viewParticipants() {\n\n  }\n\n  function leaveCall() {\n    window.close()\n  }\n\n  useEffect(() => {\n    setIsInitVideoCallSocket(true);\n    if (isVideoCallSocketConnected && user._id) {\n      joinCall(user._id);\n    }\n  }, [isVideoCallSocketConnected, user, setIsInitVideoCallSocket]);\n\n  return (\n    <Container className =\"d-flex flex-column\">\n      <Row className=\"d-flex mb-3\">\n          <div className = 'd-flex justify-content-center py-3' style = {{height: '90vh'}}>\n            {otherStreams.length > 0 && otherStreams.map((stream, index) => {\n              return <Video key={index} stream={stream}/>;\n            })}\n          <Video stream={myStream} muted = 'true' isMute = {isMute} isVideoStop = {isVideoStop} />\n          </div>\n      </Row>\n      <Row className=\"d-flex bg-dark text-white\">\n          <ControlButton\n            iconName = {isMute ? 'microphone-slash' : 'microphone'}\n            text = {isMute ? 'Unmute' : 'Mute'}\n            onClick = {muteAndUnmute}\n          />\n\n          <ControlButton\n            iconName = {isVideoStop ? 'video-slash' : 'video'}\n            text = {isVideoStop ? 'Play Video' : 'Stop Video'}\n            onClick = {playAndStopVideo}\n          />\n        \n          <ControlButton\n            iconName = 'users'\n            text = 'Participants'\n            onClick = {viewParticipants}\n          />\n        \n          <ControlButton\n            iconName = 'door-open'\n            text = 'Leave call'\n            classAtr = 'text-danger'\n            onClick = {leaveCall}\n          />\n      </Row>\n    </Container>\n  );\n}\n","/Users/lamdaoletung/src/messenger_clone/messenger_clone_client/src/components/nav_bar/LogOut.js",[],"/Users/lamdaoletung/src/messenger_clone/messenger_clone_client/src/components/dashboard/sidebar/Searchfield.js",[],"/Users/lamdaoletung/src/messenger_clone/messenger_clone_client/src/components/Register.js",[],"/Users/lamdaoletung/src/messenger_clone/messenger_clone_client/src/routes/HomeSecuredRoute.js",["78"],"import React from 'react'\nimport {Route, Redirect} from 'react-router-dom'\nimport useLocalStorage from '../hooks/useLocalStorage';\n\nexport default function HomeSecuredRoute({ children, ...rest }) {\n  let [refreshToken, setRefreshToken] = useLocalStorage('refresh_token', null) \n  return (\n      <Route\n        {...rest}\n        render={({ location }) =>\n          refreshToken !== null ? (\n            children\n          ) : (\n            <Redirect\n              to={{\n                pathname: \"/login\",\n                state: { from: location }\n              }}\n            />\n          )\n        }\n      />\n    );\n}\n","/Users/lamdaoletung/src/messenger_clone/messenger_clone_client/src/contexts/SocketProvider.js",["79"],"import React, { useContext, useEffect, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport { useUserContext } from \"./UserProvider\";\nimport { CONVERSATION_BASE_URL } from \"../config\";\n\nconst SocketContext = React.createContext();\n\nexport function useSocket() {\n  return useContext(SocketContext);\n}\nexport function SocketProvider({ children }) {\n  const [chatSocket, setChatSocket] = useState();\n\n  const [videoCallSocket, setVideoCallSocket] = useState(false);\n  const [isInitVideoCallSocket, setIsInitVideoCallSocket] = useState(false);\n  const [isVideoCallSocketConnected, setIsVideoCallSocketConnected] =\n    useState(false);\n\n  const { user } = useUserContext();\n  const userId = user._id;\n  useEffect(() => {\n    if (!user) return;\n    var newChatSocket = io(`${CONVERSATION_BASE_URL}/chat`, {\n      query: {\n        userId,\n      },\n    });\n    setChatSocket(newChatSocket);\n    return () => {\n      if (newChatSocket) newChatSocket.close();\n    };\n  }, [userId]);\n\n  useEffect(() => {\n    if (isInitVideoCallSocket) {\n      console.log(\"init video call socket\");\n      var newVideoCallSocket = io(`${CONVERSATION_BASE_URL}/video-call`, {\n        query: {\n          userId,\n        },\n      });\n      setVideoCallSocket(newVideoCallSocket);\n    }\n    return () => {\n      if (newVideoCallSocket) {\n        console.log(\"cleaning up\");\n        newVideoCallSocket.close();\n      }\n    };\n  }, [userId, isInitVideoCallSocket]);\n\n  useEffect(() => {\n    videoCallSocket &&\n      videoCallSocket.on(\"connect\", () => {\n        console.log(\"video call socket connected\");\n        console.log(videoCallSocket);\n        setIsVideoCallSocketConnected(true);\n        setIsInitVideoCallSocket(false);\n      });\n  }, [videoCallSocket]);\n\n  const value = {\n    videoCallSocket,\n    chatSocket,\n    isVideoCallSocketConnected,\n    setIsInitVideoCallSocket,\n  };\n  return (\n    <SocketContext.Provider value={value}>{children}</SocketContext.Provider>\n  );\n}\n",["80","81"],"/Users/lamdaoletung/src/messenger_clone/messenger_clone_client/src/components/dashboard/ConversationDetail.js",["82"],"import React, {useState, useCallback} from 'react'\nimport {CLIENT_BASE_URL} from '../../config'\nimport {useThemeContext, themeOptions} from '../../contexts/ThemeProvider'\nimport {Form, InputGroup, Button, DropdownButton, Dropdown } from 'react-bootstrap'\nimport {useConversations} from '../../contexts/ConversationProvider'\nimport {useUserContext} from '../../contexts/UserProvider'\n\nexport default function ConversationDetail() {\n    // set theme\n    const {theme, setTheme} = useThemeContext()\n    \n    // get conversation info\n    const {sendMessage, selectedConversationId, conversations} = useConversations()\n    const conversation = selectedConversationId === null ? null : conversations.find(conversation => conversation._id === selectedConversationId)\n    // get user info \n    const {user, contacts} = useUserContext()\n    const userId = user._id\n    // \n    const [text, setText] = useState('')\n\n    // scroll to last message sent\n    const setRef = useCallback(node => {\n        if(node) {\n            node.scrollIntoView({smooth : true})\n        }\n    },[])\n    \n    // send message when clicked 'Send' button\n    function handleSubmit(e) {\n        e.preventDefault()\n        if(text !== '') {\n            sendMessage(selectedConversationId, user, text)\n            setText('') \n        }\n    }\n    // join a video call\n    function handleClick(e) {\n        e.preventDefault()\n        window.open(CLIENT_BASE_URL + `/video-call/${selectedConversationId}`)    \n    }\n    return (\n        conversation ? \n\n        <div className = {`d-flex flex-column flex-grow-1 ${theme.backgroundColor}`} style = {{height: '100%'}}>\n            <div className = 'd-flex flex-row justify-content-end'>\n                <DropdownButton title = 'Choose your theme' className='mr-2' variant={theme.commonButtonColor}>\n                    {\n                        themeOptions.map((theme, index) => {\n                            return (\n                            <Dropdown.Item key = {index} onClick = {() => {setTheme(theme)}}>{theme.name}</Dropdown.Item>                            )\n                        })\n                    }\n                </DropdownButton>\n                <Button onClick = {handleClick} className='mr-2' variant={theme.commonButtonColor}>Video Call</Button>\n            </div>\n            \n            <div className = 'flex-grow-1 overflow-auto'>\n                <div className = 'd-flex flex-column align-items-start justify-content-end px-3'>\n                    { \n                    conversation.messages.map((message, index) => {\n                        const lastMessage = conversation.messages.length - 1 === index\n                        const senderInfo = message.user\n                        const isSentFromMe = senderInfo._id === userId\n                        const {messageBody} = message\n                        return (\n                            <div \n                                ref = {lastMessage ? setRef : null}\n                                key = {index}\n                                className = {`my-1 d-flex flex-column ${isSentFromMe ? 'align-self-end align-items-end' : 'align-items-start'}`}\n                            >\n                                {\n                                    // set color of message box and sender's name depending on the sender (user or his/her contacts)\n                                }\n                                <div className = {`rounded px-2 py-1 \n                                                    ${isSentFromMe ? theme.myTextBoxColor : theme.otherTextBoxColor}`}\n                                >\n                                    {messageBody}\n                                </div>\n\n                                <div className = {`text-muted small ${isSentFromMe ? 'text-right' : ''}`}>\n                                    {isSentFromMe ? 'You' : senderInfo.name}\n                                </div>\n                            </div>\n                        )\n                    })\n                }\n                </div>\n            </div>  \n            <Form onSubmit = {handleSubmit}>\n                <Form.Group className = 'm-2'>\n                    <InputGroup>\n                        <Form.Control \n                        as = 'textarea'\n                        required \n                        value = {text}\n                        onChange = {e => setText(e.target.value)}\n                        style = {{height: '75px', resize: 'none'}} \n                        className = {`${theme.textAreaColor}`}   \n                        />\n                        <InputGroup.Append>\n                            <Button type = 'submit' className = {`${theme.sendButtonColor}`}>Send</Button>\n                        </InputGroup.Append>\n                    </InputGroup>\n                </Form.Group>\n            </Form>\n        </div>\n        :\n        <div>\n            No conversation opened\n        </div>\n    )\n}\n","/Users/lamdaoletung/src/messenger_clone/messenger_clone_client/src/components/dashboard/sidebar/ConversationList.js",[],"/Users/lamdaoletung/src/messenger_clone/messenger_clone_client/src/contexts/ConversationProvider.js",["83","84"],{"ruleId":"85","severity":1,"message":"86","line":6,"column":22,"nodeType":"87","messageId":"88","endLine":6,"endColumn":37},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"89","replacedBy":"93"},{"ruleId":"91","replacedBy":"94"},{"ruleId":"85","severity":1,"message":"95","line":1,"column":16,"nodeType":"87","messageId":"88","endLine":1,"endColumn":24},{"ruleId":"85","severity":1,"message":"96","line":1,"column":26,"nodeType":"87","messageId":"88","endLine":1,"endColumn":37},{"ruleId":"89","replacedBy":"97"},{"ruleId":"91","replacedBy":"98"},{"ruleId":"85","severity":1,"message":"99","line":3,"column":34,"nodeType":"87","messageId":"88","endLine":3,"endColumn":37},{"ruleId":"100","severity":1,"message":"101","line":55,"column":6,"nodeType":"102","endLine":55,"endColumn":66,"suggestions":"103"},{"ruleId":"85","severity":1,"message":"86","line":6,"column":22,"nodeType":"87","messageId":"88","endLine":6,"endColumn":37},{"ruleId":"100","severity":1,"message":"104","line":32,"column":6,"nodeType":"102","endLine":32,"endColumn":14,"suggestions":"105"},{"ruleId":"89","replacedBy":"106"},{"ruleId":"91","replacedBy":"107"},{"ruleId":"85","severity":1,"message":"108","line":16,"column":18,"nodeType":"87","messageId":"88","endLine":16,"endColumn":26},{"ruleId":"100","severity":1,"message":"109","line":35,"column":6,"nodeType":"102","endLine":35,"endColumn":8,"suggestions":"110"},{"ruleId":"100","severity":1,"message":"111","line":103,"column":5,"nodeType":"102","endLine":103,"endColumn":23,"suggestions":"112"},"no-unused-vars","'setRefreshToken' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["113"],"no-negated-in-lhs",["114"],["113"],["114"],"'Children' is defined but never used.","'useCallback' is defined but never used.",["113"],["114"],"'Col' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'joinCall'. Either include it or remove the dependency array.","ArrayExpression",["115"],"React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["116"],["113"],["114"],"'contacts' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'authFetch'. Either include it or remove the dependency array.",["117"],"React Hook useCallback has a missing dependency: 'userInfo'. Either include it or remove the dependency array.",["118"],"no-global-assign","no-unsafe-negation",{"desc":"119","fix":"120"},{"desc":"121","fix":"122"},{"desc":"123","fix":"124"},{"desc":"125","fix":"126"},"Update the dependencies array to be: [isVideoCallSocketConnected, user, setIsInitVideoCallSocket, joinCall]",{"range":"127","text":"128"},"Update the dependencies array to be: [user, userId]",{"range":"129","text":"130"},"Update the dependencies array to be: [authFetch]",{"range":"131","text":"132"},"Update the dependencies array to be: [userInfo]",{"range":"133","text":"134"},[1561,1621],"[isVideoCallSocketConnected, user, setIsInitVideoCallSocket, joinCall]",[976,984],"[user, userId]",[1039,1041],"[authFetch]",[3123,3141],"[userInfo]"]