[{"/Volumes/Tung Lam Data/Personal Projects/messenger_clone/frontend/src/routes/LoginSecuredRoute.js":"1","/Volumes/Tung Lam Data/Personal Projects/messenger_clone/frontend/src/routes/HomeSecuredRoute.js":"2","/Volumes/Tung Lam Data/Personal Projects/messenger_clone/frontend/src/components/Register.js":"3","/Volumes/Tung Lam Data/Personal Projects/messenger_clone/frontend/src/components/Login.js":"4","/Volumes/Tung Lam Data/Personal Projects/messenger_clone/frontend/src/config.js":"5","/Volumes/Tung Lam Data/Personal Projects/messenger_clone/frontend/src/components/Main.js":"6","/Volumes/Tung Lam Data/Personal Projects/messenger_clone/frontend/src/hooks/useLocalStorage.js":"7","/Volumes/Tung Lam Data/Personal Projects/messenger_clone/frontend/src/index.js":"8","/Volumes/Tung Lam Data/Personal Projects/messenger_clone/frontend/src/components/nav_bar/LogOut.js":"9","/Volumes/Tung Lam Data/Personal Projects/messenger_clone/frontend/src/components/dashboard/DashBoard.js":"10","/Volumes/Tung Lam Data/Personal Projects/messenger_clone/frontend/src/components/dashboard/ConversationDetail.js":"11","/Volumes/Tung Lam Data/Personal Projects/messenger_clone/frontend/src/components/dashboard/sidebar/SideBar.js":"12","/Volumes/Tung Lam Data/Personal Projects/messenger_clone/frontend/src/components/dashboard/sidebar/ConversationList.js":"13","/Volumes/Tung Lam Data/Personal Projects/messenger_clone/frontend/src/components/nav_bar/NavBar.js":"14","/Volumes/Tung Lam Data/Personal Projects/messenger_clone/frontend/src/contexts/SocketProvider.js":"15","/Volumes/Tung Lam Data/Personal Projects/messenger_clone/frontend/src/components/dashboard/sidebar/ContactList.js":"16","/Volumes/Tung Lam Data/Personal Projects/messenger_clone/frontend/src/components/dashboard/sidebar/NewConversationModal.js":"17","/Volumes/Tung Lam Data/Personal Projects/messenger_clone/frontend/src/components/dashboard/sidebar/NewContactModal.js":"18","/Volumes/Tung Lam Data/Personal Projects/messenger_clone/frontend/src/components/nav_bar/UserInfo.js":"19","/Volumes/Tung Lam Data/Personal Projects/messenger_clone/frontend/src/contexts/ConversationProvider.js":"20","/Volumes/Tung Lam Data/Personal Projects/messenger_clone/frontend/src/contexts/AuthProvider.js":"21","/Volumes/Tung Lam Data/Personal Projects/messenger_clone/frontend/src/components/App.js":"22","/Volumes/Tung Lam Data/Personal Projects/messenger_clone/frontend/src/contexts/UserProvider.js":"23","/Volumes/Tung Lam Data/Personal Projects/messenger_clone/frontend/src/contexts/ThemeProvider.js":"24","/Volumes/Tung Lam Data/Personal Projects/messenger_clone/frontend/src/components/dashboard/sidebar/Searchfield.js":"25","/Volumes/Tung Lam Data/Personal Projects/messenger_clone/frontend/src/contexts/VideoCallProvider.js":"26","/Volumes/Tung Lam Data/Personal Projects/messenger_clone/frontend/src/components/video_call/VideoCall.js":"27","/Volumes/Tung Lam Data/Personal Projects/messenger_clone/frontend/src/components/video_call/Video.js":"28"},{"size":589,"mtime":1608106503000,"results":"29","hashOfConfig":"30"},{"size":619,"mtime":1608106509000,"results":"31","hashOfConfig":"30"},{"size":2240,"mtime":1611648632000,"results":"32","hashOfConfig":"30"},{"size":1781,"mtime":1619267615000,"results":"33","hashOfConfig":"30"},{"size":190,"mtime":1609987965000,"results":"34","hashOfConfig":"30"},{"size":300,"mtime":1619267635000,"results":"35","hashOfConfig":"30"},{"size":638,"mtime":1608060457000,"results":"36","hashOfConfig":"30"},{"size":423,"mtime":1609820464000,"results":"37","hashOfConfig":"30"},{"size":935,"mtime":1619266189000,"results":"38","hashOfConfig":"30"},{"size":354,"mtime":1610986236000,"results":"39","hashOfConfig":"30"},{"size":4949,"mtime":1619266082000,"results":"40","hashOfConfig":"30"},{"size":2395,"mtime":1619267205000,"results":"41","hashOfConfig":"30"},{"size":1517,"mtime":1619267520000,"results":"42","hashOfConfig":"30"},{"size":344,"mtime":1609820762000,"results":"43","hashOfConfig":"30"},{"size":2179,"mtime":1610418686000,"results":"44","hashOfConfig":"30"},{"size":650,"mtime":1619267762000,"results":"45","hashOfConfig":"30"},{"size":2256,"mtime":1610652648000,"results":"46","hashOfConfig":"30"},{"size":841,"mtime":1609821735000,"results":"47","hashOfConfig":"30"},{"size":275,"mtime":1609820824000,"results":"48","hashOfConfig":"30"},{"size":4465,"mtime":1619265153000,"results":"49","hashOfConfig":"30"},{"size":3029,"mtime":1610792432000,"results":"50","hashOfConfig":"30"},{"size":2276,"mtime":1619267587000,"results":"51","hashOfConfig":"30"},{"size":1105,"mtime":1610963410000,"results":"52","hashOfConfig":"30"},{"size":1298,"mtime":1619267409000,"results":"53","hashOfConfig":"30"},{"size":349,"mtime":1609821482000,"results":"54","hashOfConfig":"30"},{"size":4054,"mtime":1611654367000,"results":"55","hashOfConfig":"30"},{"size":2917,"mtime":1611657734000,"results":"56","hashOfConfig":"30"},{"size":1045,"mtime":1611657675000,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},"1fz6suq",{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Volumes/Tung Lam Data/Personal Projects/messenger_clone/frontend/src/routes/LoginSecuredRoute.js",["126"],"import React from 'react'\nimport {Route, Redirect} from 'react-router-dom'\nimport useLocalStorage from '../hooks/useLocalStorage';\n\nexport default function LoginSecuredRoute({ children, ...rest }) {\n  let [refreshToken, setRefreshToken] = useLocalStorage('refresh_token', null) \n  return (\n      <Route\n        {...rest}\n        render={({ location }) =>\n          refreshToken !== null ? (\n            <Redirect\n              to={{\n                pathname: \"/\",\n                state: { from: location }\n              }}\n            />\n          ) : children\n        }\n      />\n    );\n}\n",["127","128"],"/Volumes/Tung Lam Data/Personal Projects/messenger_clone/frontend/src/routes/HomeSecuredRoute.js",["129"],"import React from 'react'\nimport {Route, Redirect} from 'react-router-dom'\nimport useLocalStorage from '../hooks/useLocalStorage';\n\nexport default function HomeSecuredRoute({ children, ...rest }) {\n  let [refreshToken, setRefreshToken] = useLocalStorage('refresh_token', null) \n  return (\n      <Route\n        {...rest}\n        render={({ location }) =>\n          refreshToken !== null ? (\n            children\n          ) : (\n            <Redirect\n              to={{\n                pathname: \"/login\",\n                state: { from: location }\n              }}\n            />\n          )\n        }\n      />\n    );\n}\n",["130","131"],"/Volumes/Tung Lam Data/Personal Projects/messenger_clone/frontend/src/components/Register.js",[],"/Volumes/Tung Lam Data/Personal Projects/messenger_clone/frontend/src/components/Login.js",[],"/Volumes/Tung Lam Data/Personal Projects/messenger_clone/frontend/src/config.js",[],"/Volumes/Tung Lam Data/Personal Projects/messenger_clone/frontend/src/components/Main.js",[],"/Volumes/Tung Lam Data/Personal Projects/messenger_clone/frontend/src/hooks/useLocalStorage.js",[],["132","133"],"/Volumes/Tung Lam Data/Personal Projects/messenger_clone/frontend/src/index.js",[],"/Volumes/Tung Lam Data/Personal Projects/messenger_clone/frontend/src/components/nav_bar/LogOut.js",[],"/Volumes/Tung Lam Data/Personal Projects/messenger_clone/frontend/src/components/dashboard/DashBoard.js",["134"],"/Volumes/Tung Lam Data/Personal Projects/messenger_clone/frontend/src/components/dashboard/ConversationDetail.js",["135"],"import React, {useState, useCallback} from 'react'\nimport {CLIENT_BASE_URL} from '../../config'\nimport {useThemeContext, themeOptions} from '../../contexts/ThemeProvider'\nimport {Form, InputGroup, Button, DropdownButton, Dropdown } from 'react-bootstrap'\nimport {useConversations} from '../../contexts/ConversationProvider'\nimport {useUserContext} from '../../contexts/UserProvider'\n\nexport default function ConversationDetail() {\n    // set theme\n    const {theme, setTheme} = useThemeContext()\n    \n    // get conversation info\n    const {sendMessage, selectedConversationId, conversations} = useConversations()\n    const conversation = selectedConversationId === null ? null : conversations.find(conversation => conversation._id === selectedConversationId)\n    // get user info \n    const {user, contacts} = useUserContext()\n    const userId = user._id\n    // \n    const [text, setText] = useState('')\n\n    // scroll to last message sent\n    const setRef = useCallback(node => {\n        if(node) {\n            node.scrollIntoView({smooth : true})\n        }\n    },[])\n    \n    // send message when clicked 'Send' button\n    function handleSubmit(e) {\n        e.preventDefault()\n        if(text !== '') {\n            sendMessage(selectedConversationId, user, text)\n            setText('') \n        }\n    }\n    // join a video call\n    function handleClick(e) {\n        e.preventDefault()\n        window.open(CLIENT_BASE_URL + `/video-call/${selectedConversationId}`)    \n    }\n    return (\n        conversation ? \n\n        <div className = {`d-flex flex-column flex-grow-1 ${theme.backgroundColor}`} style = {{height: '100%'}}>\n            <div className = 'd-flex flex-row justify-content-end'>\n                <DropdownButton title = 'Choose your theme' className='mr-2' variant={theme.commonButtonColor}>\n                    {\n                        themeOptions.map((theme, index) => {\n                            return (\n                            <Dropdown.Item key = {index} onClick = {() => {setTheme(theme)}}>{theme.name}</Dropdown.Item>                            )\n                        })\n                    }\n                </DropdownButton>\n                <Button onClick = {handleClick} className='mr-2' variant={theme.commonButtonColor}>Video Call</Button>\n            </div>\n            \n            <div className = 'flex-grow-1 overflow-auto'>\n                <div className = 'd-flex flex-column align-items-start justify-content-end px-3'>\n                    { \n                    conversation.messages.map((message, index) => {\n                        const lastMessage = conversation.messages.length - 1 === index\n                        const senderInfo = message.user\n                        const isSentFromMe = senderInfo._id === userId\n                        const {messageBody} = message\n                        return (\n                            <div \n                                ref = {lastMessage ? setRef : null}\n                                key = {index}\n                                className = {`my-1 d-flex flex-column ${isSentFromMe ? 'align-self-end align-items-end' : 'align-items-start'}`}\n                            >\n                                {\n                                    // set color of message box and sender's name depending on the sender (user or his/her contacts)\n                                }\n                                <div className = {`rounded px-2 py-1 \n                                                    ${isSentFromMe ? theme.myTextBoxColor : theme.otherTextBoxColor}`}\n                                >\n                                    {messageBody}\n                                </div>\n\n                                <div className = {`text-muted small ${isSentFromMe ? 'text-right' : ''}`}>\n                                    {isSentFromMe ? 'You' : senderInfo.name}\n                                </div>\n                            </div>\n                        )\n                    })\n                }\n                </div>\n            </div>  \n            <Form onSubmit = {handleSubmit}>\n                <Form.Group className = 'm-2'>\n                    <InputGroup>\n                        <Form.Control \n                        as = 'textarea'\n                        required \n                        value = {text}\n                        onChange = {e => setText(e.target.value)}\n                        style = {{height: '75px', resize: 'none'}} \n                        className = {`${theme.textAreaColor}`}   \n                        />\n                        <InputGroup.Append>\n                            <Button type = 'submit' className = {`${theme.sendButtonColor}`}>Send</Button>\n                        </InputGroup.Append>\n                    </InputGroup>\n                </Form.Group>\n            </Form>\n        </div>\n        :\n        <div>\n            No conversation opened\n        </div>\n    )\n}\n","/Volumes/Tung Lam Data/Personal Projects/messenger_clone/frontend/src/components/dashboard/sidebar/SideBar.js",[],"/Volumes/Tung Lam Data/Personal Projects/messenger_clone/frontend/src/components/dashboard/sidebar/ConversationList.js",[],"/Volumes/Tung Lam Data/Personal Projects/messenger_clone/frontend/src/components/nav_bar/NavBar.js",[],"/Volumes/Tung Lam Data/Personal Projects/messenger_clone/frontend/src/contexts/SocketProvider.js",[],"/Volumes/Tung Lam Data/Personal Projects/messenger_clone/frontend/src/components/dashboard/sidebar/ContactList.js",[],"/Volumes/Tung Lam Data/Personal Projects/messenger_clone/frontend/src/components/dashboard/sidebar/NewConversationModal.js",[],"/Volumes/Tung Lam Data/Personal Projects/messenger_clone/frontend/src/components/dashboard/sidebar/NewContactModal.js",["136","137","138"],"/Volumes/Tung Lam Data/Personal Projects/messenger_clone/frontend/src/components/nav_bar/UserInfo.js",[],["139","140"],"/Volumes/Tung Lam Data/Personal Projects/messenger_clone/frontend/src/contexts/ConversationProvider.js",["141","142","143"],"import React, {useEffect, useState, useContext, useCallback} from 'react'\nimport axios from 'axios'\nimport {CONVERSATION_BASE_URL} from '../config'\nimport {useSocket} from './SocketProvider'\nimport {useAuthContext} from './AuthProvider'\nimport {useUserContext} from './UserProvider'\n\nconst ConversationContext = React.createContext()\n\n\nexport function useConversations() {\n    return useContext(ConversationContext)\n} \n\nexport function ConversationProvider({children}) {\n    const {chatSocket} = useSocket()\n    const {authFetch} = useAuthContext()\n    const userInfo = useUserContext().user\n    // get all conversations' info from db\n    let [conversations, setConversations] = useState([])\n    useEffect(() => {\n        console.log('fetch conversation');\n        authFetch({\n            method: 'get',\n            url: CONVERSATION_BASE_URL + '/conversation',\n            params: {\n              messageLimit: 30\n            }\n        })\n        .then(data => {\n            console.log('conversation fetched');\n            const conversations = data.data\n            setConversations(conversations)\n        })\n        .catch(err => {\n            console.log(err);\n        })\n    },[])\n\n    // function to select a conversation by id\n    let [selectedConversationId, setSelectedConversationId] = useState(null)\n\n        \n    // function to create a new conversation\n    function createConversation(recipientIds) {\n        const body = {\n            messages: [],\n            users: [...recipientIds]\n        }\n        authFetch({\n            method: 'post',\n            url: CONVERSATION_BASE_URL + '/conversation',\n            data: body\n        })\n        .then(data => {\n            const newConversation = data.data\n            setConversations(prevConversations => {\n                return [...prevConversations, newConversation]\n            })\n            setSelectedConversationId(newConversation._id)\n        })\n        .catch(err => {\n            console.log(err);\n        })\n    }\n\n    // function to handle message sent from others\n    const updateConversation = useCallback(({conversationId, user, messageBody}) => {\n        setConversations(prevConversations => {\n            let numUnmatchedConversations = 0\n            // if # of unmatched conversations = # of conversations => message from a new conversation\n            // deep-clone the previous state so that a re-render is triggered\n            const cloneConversations = JSON.parse(JSON.stringify(prevConversations))\n            cloneConversations.map((conversation) => {\n                // if message is from an existing conversation\n                if(conversation._id === conversationId) {\n                    conversation.messages.push({\n                        user,\n                        messageBody\n                    })                \n                }\n                else {\n                    ++numUnmatchedConversations\n                }\n                return conversation\n            })\n            let isNewConversation = numUnmatchedConversations === prevConversations.length\n            if(isNewConversation) {\n                const newConversation = {\n                    _id: conversationId,\n                    users: [user, userInfo],\n                    messages: [{\n                        user,\n                        messageBody\n                    }]\n                }\n                cloneConversations.push(newConversation)\n            }\n            return cloneConversations\n        })\n    }, [setConversations])\n\n\n    // function to send a message from user to recipients\n    function sendMessage(conversationId, user, messageBody) {\n        chatSocket.emit('send-message', {conversationId, user, messageBody})\n        updateConversation({conversationId, user, messageBody})\n    }       \n    \n    // update the conversation when receiving a message\n    useEffect(() => {\n        if(chatSocket == null) {\n            return \n        }\n        \n        chatSocket.on('push-message', updateConversation)\n        return () => {\n            chatSocket.off('push-message')\n        } \n    }\n    , [chatSocket, updateConversation]\n    )\n\n    const value = {\n        conversations,\n        createConversation,\n        sendMessage,\n        selectConversationById: setSelectedConversationId,\n        selectedConversationId\n    }\n    return (\n        <ConversationContext.Provider value = {value}>\n            {children}\n        </ConversationContext.Provider>\n    )\n}\n","/Volumes/Tung Lam Data/Personal Projects/messenger_clone/frontend/src/contexts/AuthProvider.js",["144"],"import React, {useContext, useState, useRef} from 'react'\nimport {AUTH_BASE_URL} from '../config'\nimport axios from 'axios'\nimport useLocalStorage from '../hooks/useLocalStorage'\n\n\nconst isTokenExpired = (token) => {\n    if(!token) return true\n    const decode = JSON.parse(atob(token.split('.')[1]))\n    const expiredDateInSec = decode.exp ? decode.exp : null\n    return expiredDateInSec ? expiredDateInSec * 1000 < Date.now() - 2000 : true\n}\n\nconst AuthContext = React.createContext()\nexport function useAuthContext() {\n    return useContext(AuthContext)\n}\nexport function AuthProvider({children}) {\n    \n    const [accessToken, setAccessToken] = useLocalStorage('access_token', null)\n    const [refreshToken, setRefreshToken] = useLocalStorage('refresh_token', null)\n    const isTokenUpdating = useRef(false)\n    // get accessToken\n    async function getAccessToken() {\n        if(!accessToken) return null\n        if(!isTokenUpdating.current && isTokenExpired(accessToken)) {\n            isTokenUpdating.current = true\n            await axios({\n                method: 'post',\n                url: AUTH_BASE_URL + '/auth/token',\n                data: {\n                    refreshToken\n                }\n            })\n            .then(data => {\n                const {accessToken} = data.data\n                setAccessToken(accessToken)\n            })\n            .catch(err => {\n                setAccessToken(null)\n            })\n            isTokenUpdating.current = false\n            return accessToken\n        }\n        return accessToken\n    }  \n    \n    // fetch api with accessToken\n    async function authFetch(request) {\n        const token = await getAccessToken()\n        request = request || {}\n        request.headers = {\n            ...request.headers,\n            'Authorization' : `Bearer ${token}`\n        }\n        return axios(request)\n    }\n\n    // login \n    async function login({email, password}) {\n        let status = 'LOADING'\n        await axios({\n\t\t\tmethod:'post',\n\t\t\turl:AUTH_BASE_URL +'/auth/login',\n\t\t\tdata: {email, password}\n        })\n        .then(data => {\n            const {accessToken, refreshToken} = data.data\n            setAccessToken(accessToken)\n            setRefreshToken(refreshToken)\n            status = 'SUCCESS'\n        })\n\t\t.catch(err => {\n\t\t\tstatus = 'ERROR'\n        })   \n        return {status} \n    }\n    // logout\n    async function logOut() {\n        let status = 'LOADING'\n        await axios({\n            method:'delete',\n            url:AUTH_BASE_URL + '/auth/logout',\n            data: {\n                refreshToken\n            }\n        })\n        .then(data => {\n            status = 'SUCCESS'\n            setRefreshToken(null)\n        })\n        .catch(err => {\n            status = 'ERROR'\n        })\n        return {status}\n    }\n    const value = {\n       login,\n       logOut,\n       getAccessToken,\n       authFetch\n    }\n    return (\n        <AuthContext.Provider value = {value}>\n                {children}\n        </AuthContext.Provider>\n    )\n}\n\n",["145","146"],"/Volumes/Tung Lam Data/Personal Projects/messenger_clone/frontend/src/components/App.js",[],"/Volumes/Tung Lam Data/Personal Projects/messenger_clone/frontend/src/contexts/UserProvider.js",["147","148"],"import React, {useEffect, useState, useContext, useCallback} from 'react'\nimport {useAuthContext} from './AuthProvider'\nimport {AUTH_BASE_URL} from '../config'\n\nconst UserContext = React.createContext()\nexport function useUserContext() {\n    return useContext(UserContext)\n}\nexport function UserProvider({children}) {\n    // Each user has props: _id, name, email\n    console.log('user render');\n    const {authFetch} = useAuthContext()\n    const [user, setUser] = useState({})\n    const [contacts, setContacts] = useState([])\n    useEffect(() => {\n        console.log('fetch user');\n        authFetch({\n            method: 'get',\n            url: AUTH_BASE_URL + '/user'\n        })\n        .then(data => {\n            const {contacts,...user} = data.data\n            setUser(user)\n            setContacts(contacts)\n        })\n        .catch(err => {\n            setUser({})\n            setContacts([])\n        })\n    },[])\n\n    const value = {\n        user,\n        contacts,\n    }\n    return (\n        <UserContext.Provider value = {value}>\n            {children}\n        </UserContext.Provider>\n    )\n}\n","/Volumes/Tung Lam Data/Personal Projects/messenger_clone/frontend/src/contexts/ThemeProvider.js",["149","150"],"/Volumes/Tung Lam Data/Personal Projects/messenger_clone/frontend/src/components/dashboard/sidebar/Searchfield.js",[],"/Volumes/Tung Lam Data/Personal Projects/messenger_clone/frontend/src/contexts/VideoCallProvider.js",[],"/Volumes/Tung Lam Data/Personal Projects/messenger_clone/frontend/src/components/video_call/VideoCall.js",["151","152"],"import React, { useEffect, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\nimport { useVideoCallContext } from \"../../contexts/VideoCallProvider\";\nimport { useSocket } from \"../../contexts/SocketProvider\";\nimport { useUserContext } from \"../../contexts/UserProvider\";\nimport Video from \"./Video\";\n\n\nconst ControlButton = ({iconName, text, classAtr, ...otherAtr}) => {\n  return (\n    <Button\n      {...otherAtr}\n      className={`d-flex flex-column justify-content-center align-items-center px-4 py-1 mx-2 bg-dark border-0 ${classAtr}`}\n    >\n    <FontAwesomeIcon icon={iconName} />\n    <span>{text}</span>\n  </Button>\n)\n}\nexport default function VideoCall() {\n  const { streams, joinCall } = useVideoCallContext();\n  const [myStream, ...otherStreams] = streams\n  const { user } = useUserContext();\n  const { isVideoCallSocketConnected, setIsInitVideoCallSocket } = useSocket();\n  const [isMute, setIsMute] = useState(true)\n  const [isVideoStop, setIsVideoStop] = useState(false)\n  function muteAndUnmute(e) {\n    e.preventDefault()\n    setIsMute((isMute) => {\n      return !isMute\n    })\n  }\n\n  function playAndStopVideo(e) {\n    e.preventDefault()\n    setIsVideoStop((isVideoStop) => {\n      return !isVideoStop\n    })\n  }\n\n  function viewParticipants() {\n\n  }\n\n  function leaveCall() {\n    window.close()\n  }\n\n  useEffect(() => {\n    setIsInitVideoCallSocket(true);\n    if (isVideoCallSocketConnected && user._id) {\n      joinCall(user._id);\n    }\n  }, [isVideoCallSocketConnected, user, setIsInitVideoCallSocket]);\n\n  return (\n    <Container className =\"d-flex flex-column\">\n      <Row className=\"d-flex mb-3\">\n          <div className = 'd-flex justify-content-center py-3' style = {{height: '90vh'}}>\n            {otherStreams.length > 0 && otherStreams.map((stream, index) => {\n              return <Video key={index} stream={stream}/>;\n            })}\n          <Video stream={myStream} muted = 'true' isMute = {isMute} isVideoStop = {isVideoStop} />\n          </div>\n      </Row>\n      <Row className=\"d-flex bg-dark text-white\">\n          <ControlButton\n            iconName = {isMute ? 'microphone-slash' : 'microphone'}\n            text = {isMute ? 'Unmute' : 'Mute'}\n            onClick = {muteAndUnmute}\n          />\n\n          <ControlButton\n            iconName = {isVideoStop ? 'video-slash' : 'video'}\n            text = {isVideoStop ? 'Play Video' : 'Stop Video'}\n            onClick = {playAndStopVideo}\n          />\n        \n          <ControlButton\n            iconName = 'users'\n            text = 'Participants'\n            onClick = {viewParticipants}\n          />\n        \n          <ControlButton\n            iconName = 'door-open'\n            text = 'Leave call'\n            classAtr = 'text-danger'\n            onClick = {leaveCall}\n          />\n      </Row>\n    </Container>\n  );\n}\n","/Volumes/Tung Lam Data/Personal Projects/messenger_clone/frontend/src/components/video_call/Video.js",["153"],{"ruleId":"154","severity":1,"message":"155","line":6,"column":22,"nodeType":"156","messageId":"157","endLine":6,"endColumn":37},{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","replacedBy":"161"},{"ruleId":"154","severity":1,"message":"155","line":6,"column":22,"nodeType":"156","messageId":"157","endLine":6,"endColumn":37},{"ruleId":"158","replacedBy":"162"},{"ruleId":"160","replacedBy":"163"},{"ruleId":"158","replacedBy":"164"},{"ruleId":"160","replacedBy":"165"},{"ruleId":"154","severity":1,"message":"166","line":4,"column":14,"nodeType":"156","messageId":"157","endLine":4,"endColumn":17},{"ruleId":"154","severity":1,"message":"167","line":16,"column":18,"nodeType":"156","messageId":"157","endLine":16,"endColumn":26},{"ruleId":"154","severity":1,"message":"168","line":4,"column":12,"nodeType":"156","messageId":"157","endLine":4,"endColumn":22},{"ruleId":"154","severity":1,"message":"169","line":4,"column":24,"nodeType":"156","messageId":"157","endLine":4,"endColumn":37},{"ruleId":"154","severity":1,"message":"170","line":5,"column":27,"nodeType":"156","messageId":"157","endLine":5,"endColumn":43},{"ruleId":"158","replacedBy":"171"},{"ruleId":"160","replacedBy":"172"},{"ruleId":"154","severity":1,"message":"173","line":2,"column":8,"nodeType":"156","messageId":"157","endLine":2,"endColumn":13},{"ruleId":"174","severity":1,"message":"175","line":38,"column":7,"nodeType":"176","endLine":38,"endColumn":9,"suggestions":"177"},{"ruleId":"174","severity":1,"message":"178","line":101,"column":8,"nodeType":"176","endLine":101,"endColumn":26,"suggestions":"179"},{"ruleId":"154","severity":1,"message":"180","line":1,"column":28,"nodeType":"156","messageId":"157","endLine":1,"endColumn":36},{"ruleId":"158","replacedBy":"181"},{"ruleId":"160","replacedBy":"182"},{"ruleId":"154","severity":1,"message":"183","line":1,"column":49,"nodeType":"156","messageId":"157","endLine":1,"endColumn":60},{"ruleId":"174","severity":1,"message":"175","line":30,"column":7,"nodeType":"176","endLine":30,"endColumn":9,"suggestions":"184"},{"ruleId":"154","severity":1,"message":"185","line":1,"column":16,"nodeType":"156","messageId":"157","endLine":1,"endColumn":24},{"ruleId":"154","severity":1,"message":"183","line":1,"column":26,"nodeType":"156","messageId":"157","endLine":1,"endColumn":37},{"ruleId":"154","severity":1,"message":"166","line":3,"column":34,"nodeType":"156","messageId":"157","endLine":3,"endColumn":37},{"ruleId":"174","severity":1,"message":"186","line":55,"column":6,"nodeType":"176","endLine":55,"endColumn":66,"suggestions":"187"},{"ruleId":"174","severity":1,"message":"188","line":20,"column":8,"nodeType":"176","endLine":20,"endColumn":27,"suggestions":"189"},"no-unused-vars","'setRefreshToken' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["190"],"no-negated-in-lhs",["191"],["190"],["191"],["190"],["191"],"'Col' is defined but never used.","'contacts' is assigned a value but never used.","'searchWord' is assigned a value but never used.","'setSearchWord' is assigned a value but never used.","'setSearchResults' is assigned a value but never used.",["190"],["191"],"'axios' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'authFetch'. Either include it or remove the dependency array.","ArrayExpression",["192"],"React Hook useCallback has a missing dependency: 'userInfo'. Either include it or remove the dependency array.",["193"],"'useState' is defined but never used.",["190"],["191"],"'useCallback' is defined but never used.",["194"],"'Children' is defined but never used.","React Hook useEffect has a missing dependency: 'joinCall'. Either include it or remove the dependency array.",["195"],"React Hook useEffect has missing dependencies: 'props.isMute' and 'props.stream'. Either include them or remove the dependency array.",["196"],"no-global-assign","no-unsafe-negation",{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},{"desc":"197","fix":"201"},{"desc":"202","fix":"203"},{"desc":"204","fix":"205"},"Update the dependencies array to be: [authFetch]",{"range":"206","text":"207"},"Update the dependencies array to be: [userInfo]",{"range":"208","text":"209"},{"range":"210","text":"207"},"Update the dependencies array to be: [isVideoCallSocketConnected, user, setIsInitVideoCallSocket, joinCall]",{"range":"211","text":"212"},"Update the dependencies array to be: [props.isMute, props.isVideoStop, props.stream]",{"range":"213","text":"214"},[1185,1187],"[authFetch]",[3502,3520],"[userInfo]",[919,921],[1561,1621],"[isVideoCallSocketConnected, user, setIsInitVideoCallSocket, joinCall]",[712,731],"[props.isMute, props.isVideoStop, props.stream]"]